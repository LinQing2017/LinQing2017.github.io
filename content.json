{"meta":{"title":"LQing的博客","subtitle":"“做程序员太辛苦了, 我想换行，我该怎么办?” “敲一下回车。”","description":"弄个博客假装技术宅！？？","author":"LQing","url":"https://LinQing2017.github.io","root":"/"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2019-02-16T16:00:00.000Z","updated":"2019-10-29T07:16:59.196Z","comments":false,"path":"2019/02/16/hello-world/","link":"","permalink":"https://linqing2017.github.io/2019/02/16/hello-world/","excerpt":"通过GitPage和Hexo搭建个人博客！我要做一个有逼格的程序员！！！！","text":"通过GitPage和Hexo搭建个人博客！我要做一个有逼格的程序员！！！！ 建站原理Github有一个功能叫做“GitHub Pages”，这是一个对小码农提高逼格非常有用的功能。我们可以创建一个名字为“{用户名}.github.io”的仓库，在这个仓库发布静态网页可以通过“https://{用户名}.github.io”访问。 搭建博客的原理非常简单：利用博客工具将写好的Markdown文档转换成静态网页，推送到Github的仓库中，最后通过Github Page访问。 当然如果你是前端狗，又买得起域名、VPS~ 关掉浏览器吧！这篇博客太小儿科了！ 博客框架当前有非常多的博客框架，可以快速的将Markdown、主题、评论、Tags、文章归档等功能生成相应的静态网页，非常适合“前端水准低幼人士”！ 下面简单介绍一下，两个静态博客主流框架：jekyll和hexo。 JekyllJekyll是Github原生支持的解析器，我深入研究半天以后发现：这个玩意用着好像有点麻烦，好多功能需要自己开发，问题是我完全不会前端呀！！！？相比Hexo的唯一优势是：在Github上只需要维护一个分支，所有Markdown文章都是动态解析成Index的。 如果你完全不想定制，只想用别人的模板，可以参考下面的使用步骤： Step 1： 到github搜索Jekyll关键字，找一个功能齐全的仓库（比如这位老兄的就不错）fork之； Step 2： 把仓库名称改成“{你的Github用户名}.github.io”，pull到本地； Step 3： 读完README，发挥你的聪明才智，改改_config.yml文件、改改图片……弄的这个工程好像是你自主研发的一样就差不多了； Step 4： 删除_post目录下面的文档，换成你自己的； Step 5： Push到仓库，差不多就这样了； 参考jekyll 官网 jekyll 中文网 HexoHexo比Jekyll的优势在于：能找的更多功能齐全的主题，并且能够生成完全静态网页，不会像Jekyll一样被Github限制使用插件。 可以参考下面的步骤建站： Step 1： 安装nodejs，通过npm命令安装hexo工具； Step 2： 创建一个hexo工程； Step 3： copy一个好看的主题，放到hexo工程目录下的themes。我拷贝的是这个兄弟定制的主题)； Step 4： 发挥想象力修改一下工程的_config.yml、主题的_config.yml； Step 5： 编译Hexo，推送编译内容到仓库； 参考Hexo中文网 操作步骤搭建Hexo开发环境123456789101112131415# Hexo基于NodeJS，用npm进行包管理npm install hexo-cli -g # 安装 hexo-cli 工具。-g 表示全局安装，安装完成后在任意目录都可以使用hexo模块。hexo init lqblog # 创建hexo工程，lqblog是工程目录cd lqblog# 在工程目录下下安装以下，hexo插件，注意这些插件只有在工程目录下可用npm install hexo-generator-feed --savenpm install hexo-renderer-less --savenpm install hexo-generator-json-content --savenpm install hexo-helper-qrcode --savenpm install hexo-deployer-git --savenpm install Hexo基本操作12345hexo init lqblog #初始化化工程hexo generate #编译hexo server #运行博客hexo clean #清除编译内容hexo deploy #push编译结果到远程仓库 搭建Jekyll开发环境Jekyll基于Ruby需要先装ruby环境。 Centos下安装ruby环境，可以使用RVM安装（YUM源上装的Ruby版本太久无法安装Jekyll）。","categories":[{"name":"小工具","slug":"小工具","permalink":"https://linqing2017.github.io/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://linqing2017.github.io/tags/Hexo/"}]}]}